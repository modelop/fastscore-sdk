/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package main */


#line 1 "cgo-builtin-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

typedef struct { const char *p; ptrdiff_t n; } _GoString_;

#endif

/* Start of preamble from import "C" comments.  */













/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

typedef _GoString_ GoString;
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


extern char* Attachment_upload(char* p0, char* p1, char* p2);

extern char* Attachment_download(char* p0, char* p1, char* p2);

extern char* Attachment_list(char* p0);

extern char* Attachment_remove(char* p0, char* p1);

extern char* Config_show();

extern char* Config_set(char* p0);

extern char* Connect(char* p0);

extern char* Engine_inspect(char* p0);

extern char* Engine_pause(char* p0);

extern char* Engine_unpause(char* p0);

extern char* Engine_reset(char* p0);

extern char* Get_Fleet();

extern char* Model_add(char* p0, char* p1);

extern char* Model_show(char* p0);

extern char* Model_list();

extern char* Model_remove(char* p0);

extern char* Model_load(char* p0, char* p1);

extern char* Model_inspect(char* p0);

extern char* Model_input(char* p0, GoInt p1);

extern char* Model_output(char* p0, GoInt p1);

extern char* Model_scale(char* p0, GoInt p1);

extern char* Run(char* p0, char* p1, char* p2, char* p3);

extern char* Schema_list();

extern char* Schema_show(char* p0);

extern char* Schema_add(char* p0, char* p1);

extern char* Schema_remove(char* p0);

extern char* Stream_show(char* p0);

extern char* Stream_list();

extern char* Stream_add(char* p0, char* p1);

extern char* Stream_remove(char* p0);

extern char* Stream_attach(GoInt p0, char* p1, char* p2);

extern char* Stream_detach(GoInt p0, char* p1);

extern char* Stream_inspect(char* p0, char* p1);

extern char* Stream_sample(char* p0, char* p1, GoInt p2);

extern char* Use(char* p0);

#ifdef __cplusplus
}
#endif
